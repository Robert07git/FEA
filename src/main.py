from data_loader import load_questions
from quiz_logic import run_quiz
from datetime import datetime
import os

DOMENII = {
    "1": "structural",
    "2": "crash",
    "3": "moldflow",
    "4": "cfd",
    "5": "nvh",
    "6": "mix"
}

def alege_domeniu():
    print("=== FEA QUIZ ===")
    print("Alege domeniul pe care vrei sÄƒ te testezi:")
    print("  1 - Simulare structuralÄƒ (tensiuni, mesh, BC)")
    print("  2 - Crash / impact / energie absorbitÄƒ")
    print("  3 - Moldflow (injecÈ›ie plastic, shrinkage, warpage)")
    print("  4 - CFD (aerodinamicÄƒ, curgere, presiune)")
    print("  5 - NVH (zgomot, vibraÈ›ii, confort)")
    print("  6 - MIX (toate domeniile amestecate)")
    print()

    alegere = input("Introdu numÄƒrul domeniului (1-6): ").strip()

    # fallback: dacÄƒ bagi aiurea, alegem 'mix'
    domeniu = DOMENII.get(alegere, "mix")
    print(f"\nAi ales domeniul: {domeniu.upper()}.\n")
    return domeniu


def salveaza_scor(domeniu, score, asked, pct):
    """
    SalveazÄƒ rezultatul Ã®ntr-un fiÈ™ier text numit score_history.txt
    Format linie:
    2025-10-24 20:13 | domeniu=crash | scor=8/10 | procent=80.0%
    """
    # baza proiectului = folderul pÄƒrinte al lui src
    base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    history_path = os.path.join(base_dir, "score_history.txt")

    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M")
    line = f"{timestamp} | domeniu={domeniu} | scor={score}/{asked} | procent={pct:.1f}%\n"

    try:
        with open(history_path, "a", encoding="utf-8") as f:
            f.write(line)
    except Exception as e:
        # nu blocÄƒm aplicaÈ›ia dacÄƒ nu putem scrie, doar informÄƒm
        print(f"[Avertisment] Nu am putut salva scorul Ã®n score_history.txt: {e}")


def main():
    domeniu_selectat = alege_domeniu()

    # Ã®ncÄƒrcÄƒm Ã®ntrebÄƒrile filtrate pe domeniul ales
    questions = load_questions(domain=domeniu_selectat)

    # stabilim cÃ¢te Ã®ntrebÄƒri punem Ã®n sesiune
    num_q = 10
    if len(questions) < num_q:
        num_q = len(questions)

    score, asked = run_quiz(questions, num_questions=num_q)

    print("=== REZULTAT FINAL ===")
    print(f"Scor: {score}/{asked}")
    pct = (score / asked) * 100 if asked > 0 else 0
    print(f"Asta Ã®nseamnÄƒ {pct:.1f}% corect.")
    print()

    # feedback verbal
    if pct >= 80:
        print("Bravo, eÈ™ti pe drumul bun pentru un interviu CAE junior ğŸ‘Œ")
    elif pct >= 50:
        print("E ok, dar mai lucreazÄƒ la conceptele mai slabe din domeniul ales.")
        print("Reia Ã®ntrebÄƒrile È™i ruleazÄƒ din nou quiz-ul.")
    else:
        print("Nu-i panicÄƒ. Reia teoria de bazÄƒ. Asta se Ã®nvaÈ›Äƒ ğŸ’ª")

    # salvÄƒm scorul Ã®n istoric
    salveaza_scor(domeniu_selectat, score, asked, pct)
    print("\nRezultatul a fost salvat Ã®n score_history.txt âœ…")


if __name__ == "__main__":
    main()
